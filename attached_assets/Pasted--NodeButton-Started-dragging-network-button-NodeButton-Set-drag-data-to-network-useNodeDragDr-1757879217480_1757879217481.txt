 NodeButton: Started dragging network button
 NodeButton: Set drag data to: network
 useNodeDragDrop: Drag started
 useNodeDragDrop: Drop event triggered
 useNodeDragDrop: Drop event received with data: "network" at position: Object
 parseDragData: Processing drag data: network
 parseDragData: Not JSON format, trying string parsing
 parseDragData: Using simple node type: network
 useNodeDragDrop: Parsed drag data: nodeType="network", fiveQIId="undefined"
 useNodeDragDrop: Elements at drop point: 9
 detectParentNodeFromDOM: Checking elements at point: 9
 detectParentNodeFromDOM: No parent node found in DOM elements
 detectParentNodeFromPosition: Checking position: Object
 detectParentNodeFromPosition: Available nodes: Array(0)
 detectParentNodeFromPosition: No parent node found at position
 useNodeDragDrop: Detected parent: none
 useNodeDragDrop: Creating standalone network node at safe position: Object
 useNodeEditor: Adding network node at position: Object
 FlowInstance: Rendering with 1 nodes, 0 edges
 FlowInstance: First node: Object
 NodeEditor: Syncing clear operation - clearing 1 hook nodes
 StandardNodeWrapper: id=network-1757879065859-2957, type=network, nodeNumber=2957
 StandardNodeWrapper: id=network-1757879065859-2957, type=network, nodeNumber=2957
 FlowInstance: Rendering with 0 nodes, 0 edges
 [vite] hot updated: /src/components/NodeEditor.tsx
 [vite] hot updated: /src/index.css?v=wRabfSmjielQkUs6Tznaj
 [vite] hot updated: /src/components/NodeEditor.tsx
 [vite] hot updated: /src/index.css?v=wRabfSmjielQkUs6Tznaj
 NodeButton: Started dragging network button
 NodeButton: Set drag data to: network
 useNodeDragDrop: Drag started
 useNodeDragDrop: Drop event triggered
 useNodeDragDrop: Drop event received with data: "network" at position: Object
 parseDragData: Processing drag data: network
 parseDragData: Not JSON format, trying string parsing
 parseDragData: Using simple node type: network
 useNodeDragDrop: Parsed drag data: nodeType="network", fiveQIId="undefined"
 useNodeDragDrop: Elements at drop point: 9
 detectParentNodeFromDOM: Checking elements at point: 9
 detectParentNodeFromDOM: No parent node found in DOM elements
 detectParentNodeFromPosition: Checking position: Object
 detectParentNodeFromPosition: Available nodes: Array(0)
 detectParentNodeFromPosition: No parent node found at position
 useNodeDragDrop: Detected parent: none
 useNodeDragDrop: Creating standalone network node at safe position: Object
 useNodeEditor: Adding network node at position: Object
 FlowInstance: Rendering with 1 nodes, 0 edges
 FlowInstance: First node: Object
 NodeEditor: PRESERVED new nodes - nodes: 0, hookNodes: 1 (normal node creation or child node addition)
 StandardNodeWrapper: id=network-1757879182509-4834, type=network, nodeNumber=4834
 StandardNodeWrapper: id=network-1757879182509-4834, type=network, nodeNumber=4834
 NodeButton: Started dragging cell-area button
 NodeButton: Set drag data to: cell-area
 useNodeDragDrop: Drag started
 useNodeDragDrop: Drop event triggered
 useNodeDragDrop: Drop event received with data: "cell-area" at position: Object
 parseDragData: Processing drag data: cell-area
 parseDragData: Not JSON format, trying string parsing
 parseDragData: Using simple node type: cell-area
 useNodeDragDrop: Parsed drag data: nodeType="cell-area", fiveQIId="undefined"
 useNodeDragDrop: Adjusted position to prevent overlap: Object
 useNodeDragDrop: Elements at drop point: 14
 detectParentNodeFromDOM: Checking elements at point: 14
 detectParentNodeFromDOM: Found parent node container with ID: network-1757879182509-4834
 useNodeDragDrop: Detected parent: network-1757879182509-4834
useNodeRelationships.ts:35 Validating relationship: network -> cell-area
useNodeRelationships.ts:65 Valid relationship confirmed: network -> cell-area
useNodeDragDrop.ts:121 useNodeDragDrop: Creating child cell-area node under parent network-1757879182509-4834
useNodeDragDrop.ts:124 useNodeDragDrop: Parent node found: network
useNodeDragDrop.ts:235 useNodeDragDrop: Child position calculated: Object
idCounters.ts:27 Generated new Cell Area ID: 2
useSimpleChildNodeCreation.ts:29 Creating child cell-area with ID: 2
useSimpleChildNodeCreation.ts:79 Creating child cell-area node with ID: cell-area-2 under parent: network-1757879182509-4834
useNodeDragDrop.ts:247 ðŸŽ¯ useNodeDragDrop: NOT triggering layout for cell-area - parent position preserved
FlowInstance.tsx:80 FlowInstance: Rendering with 2 nodes, 0 edges
FlowInstance.tsx:83 FlowInstance: First node: Object
NodeEditor.tsx:130 NodeEditor: PRESERVED new nodes - nodes: 0, hookNodes: 2 (normal node creation or child node addition)
StandardNodeWrapper.tsx:60 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
StandardNodeWrapper.tsx:60 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
useSimpleChildNodeCreation.ts:192 useSimpleChildNodeCreation: Creating edge from network-1757879182509-4834 to cell-area-2
useUnifiedEdgeManager.ts:22 UnifiedEdgeManager: Creating edge unified-network-1757879182509-4834-cell-area-2 (auto)
useUnifiedEdgeManager.ts:58 UnifiedEdgeManager: Adding edge to state: Object
useUnifiedEdgeManager.ts:112 UnifiedEdgeManager: Total edges after addition: 1
FlowInstance.tsx:80 FlowInstance: Rendering with 2 nodes, 1 edges
FlowInstance.tsx:83 FlowInstance: First node: Object
NodeEditor.tsx:145 NodeEditor: Syncing clear operation - clearing 1 hook edges
FlowInstance.tsx:80 FlowInstance: Rendering with 2 nodes, 0 edges
FlowInstance.tsx:83 FlowInstance: First node: Object
NodeButton.tsx:34 NodeButton: Started dragging cell-area button
NodeButton.tsx:42 NodeButton: Set drag data to: cell-area
useNodeDragDrop.ts:32 useNodeDragDrop: Drag started
useNodeDragDrop.ts:41 useNodeDragDrop: Drop event triggered
useNodeDragDrop.ts:63 useNodeDragDrop: Drop event received with data: "cell-area" at position: Object
useDragDataParser.ts:3 parseDragData: Processing drag data: cell-area
useDragDataParser.ts:17 parseDragData: Not JSON format, trying string parsing
useDragDataParser.ts:46 parseDragData: Using simple node type: cell-area
useNodeDragDrop.ts:79 useNodeDragDrop: Parsed drag data: nodeType="cell-area", fiveQIId="undefined"
useNodeDragDrop.ts:94 useNodeDragDrop: Adjusted position to prevent overlap: Object
useNodeDragDrop.ts:99 useNodeDragDrop: Elements at drop point: 11
useParentNodeDetection.ts:9 detectParentNodeFromDOM: Checking elements at point: 11
useParentNodeDetection.ts:28 detectParentNodeFromDOM: Found parent node container with ID: network-1757879182509-4834
useNodeDragDrop.ts:108 useNodeDragDrop: Detected parent: network-1757879182509-4834
useNodeRelationships.ts:35 Validating relationship: network -> cell-area
useNodeRelationships.ts:65 Valid relationship confirmed: network -> cell-area
useNodeDragDrop.ts:121 useNodeDragDrop: Creating child cell-area node under parent network-1757879182509-4834
useNodeDragDrop.ts:124 useNodeDragDrop: Parent node found: network
useNodeDragDrop.ts:235 useNodeDragDrop: Child position calculated: Object
idCounters.ts:27 Generated new Cell Area ID: 3
useSimpleChildNodeCreation.ts:29 Creating child cell-area with ID: 3
useSimpleChildNodeCreation.ts:79 Creating child cell-area node with ID: cell-area-3 under parent: network-1757879182509-4834
useNodeDragDrop.ts:247 ðŸŽ¯ useNodeDragDrop: NOT triggering layout for cell-area - parent position preserved
FlowInstance.tsx:80 FlowInstance: Rendering with 3 nodes, 0 edges
FlowInstance.tsx:83 FlowInstance: First node: Object
NodeEditor.tsx:130 NodeEditor: PRESERVED new nodes - nodes: 0, hookNodes: 3 (normal node creation or child node addition)
StandardNodeWrapper.tsx:60 StandardNodeWrapper: id=cell-area-3, type=cell-area, nodeNumber=3
StandardNodeWrapper.tsx:60 StandardNodeWrapper: id=cell-area-3, type=cell-area, nodeNumber=3
useSimpleChildNodeCreation.ts:192 useSimpleChildNodeCreation: Creating edge from network-1757879182509-4834 to cell-area-3
useUnifiedEdgeManager.ts:22 UnifiedEdgeManager: Creating edge unified-network-1757879182509-4834-cell-area-3 (auto)
useUnifiedEdgeManager.ts:58 UnifiedEdgeManager: Adding edge to state: Object
useUnifiedEdgeManager.ts:112 UnifiedEdgeManager: Total edges after addition: 1
FlowInstance.tsx:80 FlowInstance: Rendering with 3 nodes, 1 edges
FlowInstance.tsx:83 FlowInstance: First node: Object
NodeEditor.tsx:145 NodeEditor: Syncing clear operation - clearing 1 hook edges
FlowInstance.tsx:80 FlowInstance: Rendering with 3 nodes, 0 edges
FlowInstance.tsx:83 FlowInstance: First node: Object

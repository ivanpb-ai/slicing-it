DNN useEffect dnnCustomName: {dataDnnCustomName: 'h', prevName: undefined, currentLocalState: 'h'}
DnnNode.tsx:25 DNN: Setting customName from data: h
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hi', prevName: 'h', currentLocalState: 'hi'}
DnnNode.tsx:25 DNN: Setting customName from data: hi
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiy', prevName: 'hi', currentLocalState: 'hiy'}
DnnNode.tsx:25 DNN: Setting customName from data: hiy
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyu', prevName: 'hiy', currentLocalState: 'hiyu'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyu
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuo', prevName: 'hiyu', currentLocalState: 'hiyuo'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuo
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoi', prevName: 'hiyuo', currentLocalState: 'hiyuoi'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoi
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoij', prevName: 'hiyuoi', currentLocalState: 'hiyuoij'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoij
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijo', prevName: 'hiyuoij', currentLocalState: 'hiyuoijo'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijo
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijoj', prevName: 'hiyuoijo', currentLocalState: 'hiyuoijoj'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijoj
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijojp', prevName: 'hiyuoijoj', currentLocalState: 'hiyuoijojp'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijojp
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijojpj', prevName: 'hiyuoijojp', currentLocalState: 'hiyuoijojpj'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijojpj
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijojpjp', prevName: 'hiyuoijojpj', currentLocalState: 'hiyuoijojpjp'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijojpjp
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: 'hiyuoijojpjpo', prevName: 'hiyuoijojpjp', currentLocalState: 'hiyuoijojpjpo'}
DnnNode.tsx:25 DNN: Setting customName from data: hiyuoijojpjpo
NodeEditor.tsx:265 NodeEditor: Save triggered with 25 nodes and 47 edges
NodeEditor.tsx:293 NodeEditor: Attempting to save 25 nodes and 47 edges
ToolbarContainer.tsx:84 Clear canvas button clicked in Toolbar
idCounters.ts:104 Resetting all ID counters to 1
NodeEditor.tsx:127 NodeEditor: Load triggered
NodeEditor.tsx:132 Available graphs for loading: 1
NodeEditor.tsx:163 Loading graph "test1" with 25 nodes and 47 edges
NodeEditor.tsx:178 Processed 25 nodes and 47 edges for loading
nodeStyles.ts:112 network clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 network clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-6', nodeId: 'fiveqi-79', fiveQIId: '79', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 79
fiveQIUtils.ts:24 Looking up 5QI with ID: "79"
fiveQIUtils.ts:33 Found matching 5QI for ID "79": {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-6', nodeId: 'fiveqi-79', fiveQIId: '79', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 79
fiveQIUtils.ts:24 Looking up 5QI with ID: "79"
fiveQIUtils.ts:33 Found matching 5QI for ID "79": {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-4', nodeId: 'fiveqi-9', fiveQIId: '9', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 9
fiveQIUtils.ts:24 Looking up 5QI with ID: "9"
fiveQIUtils.ts:33 Found matching 5QI for ID "9": {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-4', nodeId: 'fiveqi-9', fiveQIId: '9', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 9
fiveQIUtils.ts:24 Looking up 5QI with ID: "9"
fiveQIUtils.ts:33 Found matching 5QI for ID "9": {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-1', nodeId: 'fiveqi-67', fiveQIId: '67', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 67
fiveQIUtils.ts:24 Looking up 5QI with ID: "67"
fiveQIUtils.ts:33 Found matching 5QI for ID "67": {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-1', nodeId: 'fiveqi-67', fiveQIId: '67', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 67
fiveQIUtils.ts:24 Looking up 5QI with ID: "67"
fiveQIUtils.ts:33 Found matching 5QI for ID "67": {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-3', nodeId: 'fiveqi-7', fiveQIId: '7', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 7
fiveQIUtils.ts:24 Looking up 5QI with ID: "7"
fiveQIUtils.ts:33 Found matching 5QI for ID "7": {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-3', nodeId: 'fiveqi-7', fiveQIId: '7', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 7
fiveQIUtils.ts:24 Looking up 5QI with ID: "7"
fiveQIUtils.ts:33 Found matching 5QI for ID "7": {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=network-1756298418290-5901, type=network, nodeNumber=5901
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-1, type=cell-area, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-1, type=rrp, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-2, type=rrp, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-3, type=rrp, nodeNumber=3
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298522116-122, type=rrpmember, nodeNumber=122
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298528108-7394, type=rrpmember, nodeNumber=7394
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298536993-2136, type=rrpmember, nodeNumber=2136
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-1, type=s-nssai, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-2, type=s-nssai, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-3, type=s-nssai, nodeNumber=3
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-1'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-1, type=dnn, nodeNumber=1
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-2'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-2, type=dnn, nodeNumber=2
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-3'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-3, type=dnn, nodeNumber=3
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-4'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-4, type=dnn, nodeNumber=4
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-5'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-5, type=dnn, nodeNumber=5
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-6'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-6, type=dnn, nodeNumber=6
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-79, type=fiveqi, nodeNumber=79
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-9, type=fiveqi, nodeNumber=9
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-67, type=fiveqi, nodeNumber=67
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-7, type=fiveqi, nodeNumber=7
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308464766-6154, type=rrpmember, nodeNumber=6154
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308508069-4882, type=rrpmember, nodeNumber=4882
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308538723-1337, type=rrpmember, nodeNumber=1337
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=network-1756298418290-5901, type=network, nodeNumber=5901
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-1, type=cell-area, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-1, type=rrp, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-2, type=rrp, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-3, type=rrp, nodeNumber=3
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298522116-122, type=rrpmember, nodeNumber=122
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298528108-7394, type=rrpmember, nodeNumber=7394
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298536993-2136, type=rrpmember, nodeNumber=2136
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-1, type=s-nssai, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-2, type=s-nssai, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-3, type=s-nssai, nodeNumber=3
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-1'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-1, type=dnn, nodeNumber=1
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-2'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-2, type=dnn, nodeNumber=2
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-3'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-3, type=dnn, nodeNumber=3
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-4'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-4, type=dnn, nodeNumber=4
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-5'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-5, type=dnn, nodeNumber=5
DnnNode.tsx:19 DNN useEffect dnnCustomName: {dataDnnCustomName: undefined, prevName: undefined, currentLocalState: ''}
DnnNode.tsx:33 DNN useEffect data object changed: {dnnCustomName: undefined, currentCustomName: '', nodeId: 'dnn-6'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-6, type=dnn, nodeNumber=6
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-79, type=fiveqi, nodeNumber=79
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-9, type=fiveqi, nodeNumber=9
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-67, type=fiveqi, nodeNumber=67
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-7, type=fiveqi, nodeNumber=7
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308464766-6154, type=rrpmember, nodeNumber=6154
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308508069-4882, type=rrpmember, nodeNumber=4882
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756308538723-1337, type=rrpmember, nodeNumber=1337
MainContentWithGraphOperations: edges updated 0
Index.tsx:167 MainContentWithGraphOperations: Updated global debug edges with 0 edges
Index.tsx:45 Index component: nodes state updated, count: 0
Index.tsx:74 Index component: edges state updated, count: 0
Index.tsx:160 MainContentWithGraphOperations: edges updated 0
Index.tsx:167 MainContentWithGraphOperations: Updated global debug edges with 0 edges
Index.tsx:45 Index component: nodes state updated, count: 0
Index.tsx:74 Index component: edges state updated, count: 0
[NEW] Explain Console errors by using Copilot in Edge: click
         
         to explain an error. 
        Learn more
        Don't show again
content.js:361 Background Response (check_popup_status) {data: 'enabled'}
content.js:379 Background Response (check_my_tracking)
content.js:238 Background Response (checkHasCashback)
FlowInstance.tsx:155 FlowInstance: ReactFlow initialized
client:223 [vite] hot updated: /src/components/nodes/DnnNode.tsx
client:223 [vite] hot updated: /src/index.css?v=LKDvb75apjKGPiZSk104l
NodeEditor.tsx:126 NodeEditor: Load triggered
NodeEditor.tsx:131 Available graphs for loading: 1
NodeEditor.tsx:162 Loading graph "test1" with 22 nodes and 44 edges
react-dom.development.js:4161 [Violation] 'click' handler took 5678ms
[Violation] 'click' handler took 5678ms
nodeStyles.ts:112 network clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 network clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 cell-area clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrp clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 rrpmember clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 s-nssai clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 dnn clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-6', nodeId: 'fiveqi-79', fiveQIId: '79', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 79
fiveQIUtils.ts:24 Looking up 5QI with ID: "79"
fiveQIUtils.ts:33 Found matching 5QI for ID "79": {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-6', nodeId: 'fiveqi-79', fiveQIId: '79', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 79
fiveQIUtils.ts:24 Looking up 5QI with ID: "79"
fiveQIUtils.ts:33 Found matching 5QI for ID "79": {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '79', resourceType: 'Non-GBR', priority: '65', packetDelay: '50 ms', service: 'V2X messages'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-4', nodeId: 'fiveqi-9', fiveQIId: '9', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 9
fiveQIUtils.ts:24 Looking up 5QI with ID: "9"
fiveQIUtils.ts:33 Found matching 5QI for ID "9": {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-4', nodeId: 'fiveqi-9', fiveQIId: '9', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 9
fiveQIUtils.ts:24 Looking up 5QI with ID: "9"
fiveQIUtils.ts:33 Found matching 5QI for ID "9": {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '9', resourceType: 'Non-GBR', priority: '90', packetDelay: '300 ms', service: 'Video (Buffered Streaming), TCP-based services'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-1', nodeId: 'fiveqi-67', fiveQIId: '67', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 67
fiveQIUtils.ts:24 Looking up 5QI with ID: "67"
fiveQIUtils.ts:33 Found matching 5QI for ID "67": {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-1', nodeId: 'fiveqi-67', fiveQIId: '67', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 67
fiveQIUtils.ts:24 Looking up 5QI with ID: "67"
fiveQIUtils.ts:33 Found matching 5QI for ID "67": {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '67', resourceType: 'GBR', priority: '15', packetDelay: '100 ms', service: 'Mission Critical Video user plane'}
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
nodeStyles.ts:112 fiveqi clip-path: (nodeType) => {
  console.log(nodeType, "clip-path:", getClipPath);
  switch (nodeType) {
    case "network":
      return "inset(0% round 16px)";
    case "cell-area":
      return "circle(50%)";
  …
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-3', nodeId: 'fiveqi-7', fiveQIId: '7', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 7
fiveQIUtils.ts:24 Looking up 5QI with ID: "7"
fiveQIUtils.ts:33 Found matching 5QI for ID "7": {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:22 5QI Node rendering with data: {type: 'fiveqi', label: 'FIVEQI Node', parentId: 'dnn-3', nodeId: 'fiveqi-7', fiveQIId: '7', …}
FiveQiNode.tsx:23 5QI Node fiveQIId: 7
fiveQIUtils.ts:24 Looking up 5QI with ID: "7"
fiveQIUtils.ts:33 Found matching 5QI for ID "7": {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
FiveQiNode.tsx:88 Final QoS values for rendering: {value: '7', resourceType: 'Non-GBR', priority: '70', packetDelay: '100 ms', service: 'Voice, Video (Live Streaming), Interactive Gaming'}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=network-1756298418290-5901, type=network, nodeNumber=5901
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-1, type=cell-area, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-1, type=rrp, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-2, type=rrp, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-3, type=rrp, nodeNumber=3
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298522116-122, type=rrpmember, nodeNumber=122
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298528108-7394, type=rrpmember, nodeNumber=7394
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298536993-2136, type=rrpmember, nodeNumber=2136
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-1, type=s-nssai, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-2, type=s-nssai, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-3, type=s-nssai, nodeNumber=3
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-1, type=dnn, nodeNumber=1
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-2, type=dnn, nodeNumber=2
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-3, type=dnn, nodeNumber=3
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-4, type=dnn, nodeNumber=4
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-5, type=dnn, nodeNumber=5
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-6, type=dnn, nodeNumber=6
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-79, type=fiveqi, nodeNumber=79
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-9, type=fiveqi, nodeNumber=9
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-67, type=fiveqi, nodeNumber=67
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-7, type=fiveqi, nodeNumber=7
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=network-1756298418290-5901, type=network, nodeNumber=5901
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-1, type=cell-area, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=cell-area-2, type=cell-area, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-1, type=rrp, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-2, type=rrp, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrp-3, type=rrp, nodeNumber=3
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298522116-122, type=rrpmember, nodeNumber=122
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298528108-7394, type=rrpmember, nodeNumber=7394
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=rrpmember-1756298536993-2136, type=rrpmember, nodeNumber=2136
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-1, type=s-nssai, nodeNumber=1
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-2, type=s-nssai, nodeNumber=2
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=s-nssai-3, type=s-nssai, nodeNumber=3
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-1, type=dnn, nodeNumber=1
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-2, type=dnn, nodeNumber=2
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-3, type=dnn, nodeNumber=3
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-4, type=dnn, nodeNumber=4
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-5, type=dnn, nodeNumber=5
DnnNode.tsx:19 DnnNode useEffect triggered: {currentDataName: undefined, prevName: undefined, localState: ''}
DnnNode.tsx:33 DnnNode mounted/data changed: {dnnCustomName: undefined}
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=dnn-6, type=dnn, nodeNumber=6
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-79, type=fiveqi, nodeNumber=79
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-9, type=fiveqi, nodeNumber=9
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-67, type=fiveqi, nodeNumber=67
StandardNodeWrapper.tsx:57 StandardNodeWrapper: id=fiveqi-7, type=fiveqi, nodeNumber=7